let runExportAplikac = document.querySelector("#runExportAplikac");
runExportAplikac.addEventListener("click",importLispPoint);
async function importLispPoint(e) {
    let type = document.querySelector("#firstSelectEmport").value;
    let place = document.querySelector("#secondSelectEmport").value;
    let tapeFain = document.querySelector("#tapeFailExport").value;
    //–ö–æ–Ω—Ç—Ä–æ–ª—å
    //console.log(type,place);
    try{
        if (!type || !place || !tapeFain) {
        e.preventDefault(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
        }else{
        const API_URL = '/exportLispPoint';
        const response = await fetch(API_URL, {
             method: 'POST',
             headers: { 'Content-Type': 'application/json' },
             body: JSON.stringify({type, place, tapeFain})
        });

        if (!response.ok) {
            alert("‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö!");
            return;
        }
        // üìÇ –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∏ –∫–∞—á–∞–µ–º
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);

        const a = document.createElement('a');
        a.href = url;
        a.download = `${place}${tapeFain}`;
        document.body.appendChild(a);
        a.click();
        a.remove();
        window.URL.revokeObjectURL(url);
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        location.reload();

        //–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        alert(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!\n–§–∞–π–ª: ${place}${tapeFain}`);
        }
    } catch (err) {
      alert("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º!");
      console.error(err);
    }
}